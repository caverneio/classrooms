// Generated by Xata Codegen 0.29.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "event",
    columns: [
      { name: "course", type: "link", link: { table: "course" } },
      { name: "host", type: "link", link: { table: "host" } },
      { name: "classroom", type: "link", link: { table: "classroom" } },
      { name: "name", type: "string" },
      { name: "start", type: "datetime" },
      { name: "end", type: "datetime" },
    ],
  },
  {
    name: "classroom",
    columns: [
      { name: "max", type: "int", notNull: true, defaultValue: "0" },
      { name: "name", type: "string", unique: true },
      { name: "code", type: "int", unique: true },
    ],
    revLinks: [{ column: "classroom", table: "event" }],
  },
  {
    name: "host",
    columns: [{ name: "name", type: "string", unique: true }],
    revLinks: [{ column: "host", table: "event" }],
  },
  {
    name: "course",
    columns: [
      { name: "name", type: "string", defaultValue: "error" },
      { name: "code", type: "string", unique: true },
    ],
    revLinks: [{ column: "course", table: "event" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Event = InferredTypes["event"];
export type EventRecord = Event & XataRecord;

export type Classroom = InferredTypes["classroom"];
export type ClassroomRecord = Classroom & XataRecord;

export type Host = InferredTypes["host"];
export type HostRecord = Host & XataRecord;

export type Course = InferredTypes["course"];
export type CourseRecord = Course & XataRecord;

export type DatabaseSchema = {
  event: EventRecord;
  classroom: ClassroomRecord;
  host: HostRecord;
  course: CourseRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://utec-classrooms-rmhlob.us-east-1.xata.sh/db/utec-classrooms",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
